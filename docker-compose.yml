version: '3.8'

services:
  # FastAPI Application
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - API_KEY=${API_KEY:-secure-api-key-change-in-production}
      - DATABASE_URL=postgresql://carrier_user:${DB_PASSWORD:-secure_password}@db:5432/carrier_db
      - FMCSA_API_KEY=${FMCSA_API_KEY:-your-fmcsa-api-key}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,https://app.happyrobot.ai}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - carrier-network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=carrier_db
      - POSTGRES_USER=carrier_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secure_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - carrier-network

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - carrier-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./infra/ssl:/etc/nginx/ssl
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - carrier-network
    profiles:
      - production

  # Dashboard (if you add one)
  dashboard:
    build: ./dash
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://api:8000
      - REACT_APP_API_KEY=${API_KEY:-secure-api-key-change-in-production}
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - carrier-network
    profiles:
      - with-dashboard

volumes:
  postgres_data:
  redis_data:

networks:
  carrier-network:
    driver: bridge